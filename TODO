python
postgres
mysql .
django, drf(get, post, put, patch, options, head, delete[204])
docker, docker compose
nginx
gunicorn,uwsgi,uvicorn,daphne
redis (db[nosql], cache, Message Broker)
github cicd, gitlab runner (CICD)
minio
testing(pytest, unittest)
graphql(http post)
celery
cron
elasticsearch
5minut django project yaratish
poetry +

metabase
testing, deployment, mongodb(history)


github.com/xolmomin


https://drf-spectacular.readthedocs.io/en/latest/



Task
1. book, author, cart, wishlist modellari
2. ✅ jwt o'rnatish
3. ✅ login, register apilari
3.1✅ adminkaga email orqali kirish
3.2✅ register qismi celery ishlatish
3.3✅ register one-time link
3.4 is_premium userlarga ertaroq emailiga xabar borishi kerak [celery]
3.5✅ pochtaga yuborilgan one-time link ni expire_date 3kun bo'lishi kerak
3.6 parol xato bolsa blok qilish (5minutga)
3.7✅ django custom commands (for faker) populating data address, author)
3.8✅ barcha modellarni faker bilan to'ldirish
4. ✅ user o'zini malumotlarini update qilish apisi
5. wishlist apilari +
6.1✅ address qoshish va listini olish apisi
6.2✅ edit va ochirish 1tadan kop bolsa (edit qilishda faqat patch bolsin)
6.3✅ ochirishda default turganlarni ochira olmasligi
6.4 listini chiqarishda 1chi defaultlar chiqish keyin name ni alfabit boyicha
6.5✅ default billing no delete, no edit
6.6✅ default shipping no delete
6.7 currency (uzs, usd) (bank.uz)

7. database backup docker based
8. django custom admin

task



#takrorlash
models (https://docs.djangoproject.com/en/5.1/ref/models/fields/#field-options)
serializer
drf
signals
pytest, unittest
